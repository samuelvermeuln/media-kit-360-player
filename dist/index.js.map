{"version":3,"sources":["../src/index.js","../src/Component/Video/RenderVideo.jsx","../src/Component/Spin360/RotateComponent.jsx","../src/Component/Spin360/Icon/style.jsx","../src/Component/Spin360/Icon/Rotate.jsx","../src/Component/Spin360/animate.jsx"],"sourcesContent":["export {RenderVideo} from \"./Component/Video/RenderVideo\";\nexport {SpinImages360} from \"./Component/Spin360/RotateComponent\";","import React, {useRef, useState, useCallback, useEffect} from 'react';\nimport styled from 'styled-components';\n\nconst VideoContainer = styled.div`\n    position: relative;\n    width: ${({width}) => width};\n    height: ${({height}) => height};\n`;\n\nconst Video = styled.video`\n    width: 100%;\n    cursor: pointer;\n`;\n\nconst Controls = styled.div`\n    position: absolute;\n    bottom: 10px;\n    left: 0;\n    width: 100%;\n    display: ${({showControls}) => (showControls ? 'flex' : 'none')};\n    align-items: center;\n    justify-content: space-between;\n    z-index: 2;\n`;\n\nconst PlayPauseButton = styled.button`\n    background: transparent;\n    border: none;\n    cursor: pointer;\n    color: white;\n    font-size: 16px;\n    opacity: 0.8; /* tornando levemente transparente */\n    width: 10%;\n`;\n\nconst ProgressBar = styled.input`\n    display: ${({showProgressBar}) => (showProgressBar ? 'block' : 'none')};\n    width: 80%;\n    margin: 0 10px;\n    opacity: 0.8; /* tornando levemente transparente */\n    accent-color: ${({progressBarColor}) => progressBarColor};\n`;\n\nconst VolumeControl = styled.input`\n    display: ${({showVolumeControl}) => (showVolumeControl ? 'block' : 'none')};\n    width: 80px;\n    margin: 0 10px;\n    opacity: 0.8; /* tornando levemente transparente */\n    accent-color: ${({volumeControlColor}) => volumeControlColor};\n`;\n\nconst RetryButton = styled.button`\n    background-color: #fff;\n    color: #000;\n    padding: 10px 20px;\n    border: 2px solid #000;\n    border-radius: 5px;\n    font-size: 16px;\n    cursor: pointer;\n`;\n\nconst LoadingErrorOverlay = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 1;\n    opacity: ${({loaded}) => (loaded ? 0 : 1)};\n    transition: opacity 0.5s ease;\n    background-image: url(${({srcFallback}) => (srcFallback)});\n    background-repeat: no-repeat;\n    background-size: cover;\n`;\n\nconst LoadingOverlay = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 1;\n    opacity: ${({loaded}) => (loaded ? 0 : 1)};\n    transition: opacity 0.5s ease;\n`;\n\n\nconst RenderVideo = React.memo(({\n    src = '',\n    autoplay = false,\n    loop = true,\n    muted = false,\n    width = '100%',\n    height = '100%',\n    showControls = true,\n    showRetryButton = true,\n    showVolumeControl = true,\n    showProgressBar = true,\n    showPlayPauseButton = true,\n    showLoadingOverlay = true,\n    RetryButtonComponent = RetryButton,\n    srcFallback = '',\n    LoadingOverlayComponent = LoadingOverlay,\n    LoadingErrorOverlayComponent = LoadingErrorOverlay,\n    TextLoadingOverlayComponent ,\n    playPauseButtonComponent: PlayPauseButtonComponent = PlayPauseButton,\n    progressBarColor = '#ffffff',\n    volumeControlColor = '#ffffff',\n}) => {\n    const videoRef = useRef(null);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [currentTime, setCurrentTime] = useState(0);\n    const [duration, setDuration] = useState(0);\n    const [volume, setVolume] = useState(0.5);\n    const [loaded, setLoaded] = useState(false);\n    const [error, setError] = useState(false);\n\n    const togglePlayPause = useCallback(() => {\n        if (videoRef.current.paused) {\n            videoRef.current.play();\n            setIsPlaying(true);\n            if (videoRef.current.muted) {\n                videoRef.current.muted = false;\n            }\n        } else {\n            videoRef.current.pause();\n            setIsPlaying(false);\n        }\n    }, []);\n\n    useEffect(() => {\n        const handleLoadedData = () => {\n            setLoaded(true);\n        };\n\n        const handleError = (event) => {\n            setError(true);\n        };\n\n        window?.addEventListener('online', () => togglePlayPause());\n        window?.addEventListener('offline', () => togglePlayPause());\n\n        if (videoRef.current) {\n            videoRef?.current?.addEventListener('loadeddata', handleLoadedData);\n            videoRef?.current?.addEventListener('error', handleError);\n            return () => {\n                videoRef?.current?.removeEventListener('loadeddata', handleLoadedData);\n                videoRef?.current?.removeEventListener('error', handleError);\n            };\n        }\n    }, []);\n\n    useEffect(() => {\n        if (autoplay) {\n            videoRef.current.muted = true;\n        }\n    }, []);\n\n    const handleTimeUpdate = useCallback(() => {\n        const {currentTime, duration} = videoRef.current;\n        setCurrentTime(currentTime);\n        setDuration(duration);\n    }, []);\n\n    const handleProgressChange = useCallback(\n        (e) => {\n            const newTime = e.target.value;\n            videoRef.current.currentTime = newTime;\n            setCurrentTime(newTime);\n        },\n        [setCurrentTime]\n    );\n\n    const handleVolumeChange = useCallback(\n        (e) => {\n            const newVolume = e.target.value;\n            videoRef.current.volume = newVolume;\n            setVolume(newVolume);\n        },\n        [setVolume]\n    );\n\n    const handleRetry = useCallback(() => {\n        videoRef.current.load();\n        setError(false);\n        setLoaded(false);\n    }, []);\n\n    return (\n        <>\n            <VideoContainer width={width} height={height}>\n                <Video\n                    ref={videoRef}\n                    src={src}\n                    controls={false}\n                    autoPlay={autoplay}\n                    loop={loop}\n                    muted={muted}\n                    volume={volume}\n                    onTimeUpdate={handleTimeUpdate}\n                    preload=\"metadata\"\n                    onClick={togglePlayPause}\n                />\n                {error && (\n                    <LoadingErrorOverlayComponent srcFallback={srcFallback} loaded={loaded}>\n                        <RetryButtonComponent\n                            showRetryButton={showRetryButton}\n                            onClick={handleRetry}\n                        >\n                            Retry\n                        </RetryButtonComponent>\n                    </LoadingErrorOverlayComponent>\n\n                )}\n                {!error && !loaded && (\n                    <LoadingOverlayComponent loaded={loaded} showLoadingOverlay={showLoadingOverlay}>\n                        {TextLoadingOverlayComponent && <TextLoadingOverlayComponent />}\n                    </LoadingOverlayComponent>\n                )}\n                <Controls showControls={showControls}>\n                    <PlayPauseButtonComponent\n                        showPlayPauseButton={showPlayPauseButton}\n                        onClick={togglePlayPause}\n                    >\n                        {isPlaying ? '||' : 'Play'}\n                    </PlayPauseButtonComponent>\n                    <ProgressBar\n                        showProgressBar={showProgressBar}\n                        type=\"range\"\n                        min={0}\n                        max={duration}\n                        value={currentTime}\n                        onChange={handleProgressChange}\n                        progressBarColor={progressBarColor}\n                    />\n                    <VolumeControl\n                        showVolumeControl={showVolumeControl}\n                        type=\"range\"\n                        min={0}\n                        max={1}\n                        step={0.1}\n                        value={volume}\n                        onChange={handleVolumeChange}\n                        volumeControlColor={volumeControlColor}\n                    />\n                </Controls>\n            </VideoContainer>\n        </>\n    );\n});\n\nexport {RenderVideo};\n","import React, {useCallback, useEffect, useRef, useState} from \"react\";\nimport styled, { css } from \"styled-components\";\nimport {StyledRotateIcon} from \"./Icon/style\";\nimport {AnimationImage} from \"./animate\";\nimport { uuid } from 'uuidv4';\n\nfunction moduloWithoutNegative(value, n) {\n    return ((value % n) + n) % n;\n}\n\nconst CustomIconSvg = `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 46.693 25\" xml:space=\"preserve\" width=\"37.354\" height=\"20\">\n        <path d=\"M5.082 11.901c-8.448 4.636 14.306 7.452 19.432 7.407v-2.827l4.258 4.257-4.258 4.264v-2.648c-10.302.389-34.549-6.241-19.965-11.743q.208.646.494 1.216zm36.095-8.743q0-1.488.535-2.083c.535-.593.901-.592 1.634-.592q.528.002.866.13.337.13.551.337t.337.438a2 2 0 0 1 .197.535q.146.582.144 1.22 0 1.423-.483 2.078-.478.656-1.656.658-.656-.002-1.064-.21a1.75 1.75 0 0 1-.665-.615 2.3 2.3 0 0 1-.292-.786 5.3 5.3 0 0 1-.107-1.109m-31.117.829-3.42-.607Q7.062 1.748 8.274.878 9.484 0 11.703 0q2.545 0 3.683.949 1.133.953 1.133 2.391-.004.844-.459 1.523-.459.685-1.388 1.197.755.187 1.152.438.648.401 1.006 1.053t.362 1.558q0 1.138-.592 2.185-.598 1.043-1.714 1.607c-1.117.564-1.726.563-2.94.563q-1.774 0-2.798-.418a4.2 4.2 0 0 1-1.687-1.223q-.662-.806-1.013-2.025l3.623-.483q.212 1.095.662 1.523.446.424 1.14.424.726 0 1.208-.531c.483-.531.483-.829.483-1.423q0-.907-.465-1.401c-.465-.496-.729-.498-1.261-.498q-.423-.002-1.168.212l.187-2.588q.298.045.465.045.703 0 1.171-.452c.467-.452.473-.653.473-1.068q0-.599-.354-.948-.356-.354-.969-.354a1.4 1.4 0 0 0-1.033.385q-.403.378-.543 1.341m18.499-.844-3.603.44q-.142-.749-.473-1.057-.337-.308-.821-.308-.878-.004-1.364.885-.356.642-.525 2.733.65-.659 1.329-.973.685-.315 1.582-.315 1.743 0 2.946 1.241 1.203 1.249 1.204 3.158 0 1.288-.607 2.356-.609 1.068-1.687 1.615-1.08.547-2.71.547-1.955.002-3.134-.669-1.179-.668-1.889-2.123c-.71-1.455-.706-2.261-.706-3.868q0-3.523 1.487-5.163Q21.06 0 23.697 0q1.554-.002 2.455.358c.901.36 1.101.592 1.496 1.048q.599.694.908 1.735m-6.662 5.806q0 1.06.531 1.656.535.599 1.308.599a1.53 1.53 0 0 0 1.194-.543q.478-.543.478-1.618 0-1.101-.498-1.679a1.58 1.58 0 0 0-1.239-.578q-.753 0-1.268.563-.504.558-.504 1.599m7.71-2.273q0-3.71 1.337-5.194T35.012 0q1.315.002 2.158.323.844.327 1.376.844.537.519.838 1.092.306.576.494 1.337.364 1.453.364 3.041.002 3.543-1.203 5.183-1.194 1.64-4.13 1.642-1.642 0-2.656-.525a4.3 4.3 0 0 1-1.662-1.539q-.469-.718-.733-1.965a14 14 0 0 1-.259-2.755m3.583.008q-.004 2.484.44 3.397.44.908 1.277.908a1.36 1.36 0 0 0 .953-.385q.407-.389.592-1.223.193-.837.191-2.603c0-1.729-.144-2.888-.44-3.488q-.44-.891-1.319-.893-.897.002-1.3.908-.393.917-.395 3.378m9.424-3.522q-.002.996.175 1.362t.512.364a.53.53 0 0 0 .385-.156q.159-.153.239-.49.076-.337.076-1.041.002-1.039-.175-1.399c-.177-.36-.292-.358-.528-.358q-.36 0-.519.364-.165.366-.163 1.353m-1.08 8.325c4.012 2.041 3.054 4.936-4.051 6.694a41 41 0 0 1-6.786 1.136v2.298c2.778-.194 5.362-.833 7.623-1.379 10.685-2.588 10.312-7.208 3.557-9.815a10 10 0 0 1-.343 1.064\" style=\"fill-rule:evenodd;clip-rule:evenodd\"/>\n    </svg>\n`;\n\nconst iconUrlEncoded = encodeURIComponent(CustomIconSvg);\n\nconst StyledDiv = styled.div`\n    position: relative;\n    border: none;\n    padding: 5px;\n    display: inline-block;\n    user-select: none;\n    touch-action: none;\n    ${(props) =>\n        props.isGrabbing\n            ? css`\n                cursor: url(\"data:image/svg+xml,${iconUrlEncoded}\") 16 16, pointer;\n            `\n            : css`\n                cursor: url(\"data:image/svg+xml,${iconUrlEncoded}\") 16 16, pointer;\n            `};\n    `;\n\nconst SpinImages360 = ({\n        imagesBaseUrl = [],\n        mouseDragSpeed = 5,\n        reverse = false,\n        autoplaySpeed = 1,\n        autoplay = true,\n        width = 400,\n        height = 300,\n        showRotationIconOnStartup = false,\n        imageInitialIndex = 0,\n        shouldNotifyEvents = false,\n        notifyOnPointerDown,\n        notifyOnPointerUp,\n        notifyOnPointerMoved,\n    }) => {\n    const elementRef = useRef(null);\n    const [isScrolling, setIsScrolling] = useState(false);\n    const [initialMousePosition, setInitialMousePosition] = useState(0);\n    const [startingImageIndexOnPointerDown, setStartingImageIndexOnPointerDown] = useState(0);\n    const [currentMousePosition, setCurrentMousePosition] = useState(0);\n    const [selectedImageIndex, setSelectedImageIndex] = useState(0);\n    const [showRotationIcon, setShowRotationIcon] = useState(showRotationIconOnStartup);\n    const [useAutoplay, setUseAutoplay] = useState(autoplay);\n    const [imageSources, setImageSources] = useState([]);\n\n    const imagesCount = imagesBaseUrl.length;\n\n    useEffect(() => {\n        setUseAutoplay(autoplay);\n        setShowRotationIcon(!autoplay && showRotationIconOnStartup);\n    }, [autoplay, showRotationIconOnStartup]);\n\n    useEffect(() => {\n        if (typeof imageInitialIndex === \"undefined\") return;\n        if (imageInitialIndex < 0 || imageInitialIndex >= imagesCount) {\n            setSelectedImageIndex(imageInitialIndex);\n            console.log(\n                `ImageInitialIndex of ${imageInitialIndex} was out of bounds of 0 and count: ${imagesCount}`\n            );\n        }\n\n        setSelectedImageIndex(imageInitialIndex);\n    }, [imageInitialIndex, imagesCount]);\n\n    useEffect(() => {\n        if (!useAutoplay) return;\n\n        const timer = setTimeout(() => {\n            incrementImageIndex(1);\n        }, 1000 / autoplaySpeed);\n\n        return () => clearTimeout(timer);\n    });\n\n    useEffect(() => {\n        const createImageSources = () => {\n            return imagesBaseUrl.map((value) => ({\n                src: value,\n                index: uuid()\n            }));\n        };\n\n        setImageSources(createImageSources());\n    }, [imagesBaseUrl]);\n\n    const incrementImageIndex = useCallback((change) => {\n        let index = moduloWithoutNegative(\n            selectedImageIndex + (reverse ? -1 : 1) * Math.floor(change),\n            imagesCount\n        );\n\n        setSelectedImageIndex(index);\n    }, [selectedImageIndex, reverse, imagesCount]);\n\n    const onMouseDown = useCallback((e) => {\n        setInitialMousePosition(e.clientX);\n        setCurrentMousePosition(e.clientX);\n        setStartingImageIndexOnPointerDown(selectedImageIndex);\n        setUseAutoplay(false);\n        setIsScrolling(true);\n        setShowRotationIcon(false);\n\n        document.addEventListener(\n            \"mouseup\",\n            () => {\n                onMouseUp();\n            },\n            { once: true }\n        );\n\n        if (shouldNotifyEvents) notifyOnPointerDown?.(e.clientX, e.clientY);\n    }, [selectedImageIndex, shouldNotifyEvents, notifyOnPointerDown]);\n\n    const onMouseUp = useCallback((e) => {\n        setIsScrolling(false);\n\n        if (!shouldNotifyEvents) return;\n\n        if (typeof e !== \"undefined\") notifyOnPointerUp?.(e?.clientX, e.clientY);\n        else {\n            notifyOnPointerUp?.(0, 0);\n        }\n    }, [shouldNotifyEvents, notifyOnPointerUp]);\n\n    const onMouseMove = useCallback((e) => {\n        if (!isScrolling) return;\n\n        setCurrentMousePosition(e.clientX);\n\n        if (shouldNotifyEvents) notifyOnPointerMoved?.(e.clientX, e.clientY);\n    }, [isScrolling, shouldNotifyEvents, notifyOnPointerMoved]);\n\n    useEffect(() => {\n        const imageIndexWithOffset = (start, offset) => {\n            let index = moduloWithoutNegative(\n                start + (reverse ? -1 : 1) * Math.floor(offset),\n                imagesCount\n            );\n            setSelectedImageIndex(index);\n        };\n\n        if (!isScrolling) return;\n\n        const scaleFactor = 100;\n        let speedFactor =\n            (1 / mouseDragSpeed) * ((imagesCount * width) / scaleFactor);\n        const changeInX = currentMousePosition - initialMousePosition;\n\n        let difference = changeInX / speedFactor;\n\n        imageIndexWithOffset(startingImageIndexOnPointerDown, difference);\n    }, [\n        currentMousePosition,\n        imagesCount,\n        startingImageIndexOnPointerDown,\n        initialMousePosition,\n        isScrolling,\n        mouseDragSpeed,\n        width,\n        reverse,\n    ]);\n\n    return (\n        <StyledDiv\n            ref={elementRef}\n            isGrabbing={isScrolling}\n            onPointerDown={onMouseDown}\n            onPointerMove={onMouseMove}\n        >\n            {showRotationIcon ? (\n                <StyledRotateIcon widthInEm={2} isReverse={reverse}></StyledRotateIcon>\n            ) : null}\n            {imageSources?.map((s, index) => (\n                <AnimationImage\n                    src={s.src}\n                    width={width}\n                    height={height}\n                    isVisible={index === selectedImageIndex}\n                    key={index}\n                ></AnimationImage>\n            ))}\n        </StyledDiv>\n    );\n};\n\nexport { SpinImages360 }","import styled, { css } from \"styled-components\";\nimport {Icon} from \"./Rotate\";\n\nconst StyledRotateIcon = styled(Icon)`\n  position: absolute;\n  fill: #eee;\n  text-shadow: 4px 5px black;\n  filter: drop-shadow(3px 3px 2px rgba(0, 0, 0, 0.7));\n  opacity: 0.8;\n  ${(props) =>\n    css`\n      top: calc(50% - ${props.widthInEm / 2}em);\n      left: calc(50% - ${props.widthInEm / 2}em);\n      width: ${props.widthInEm}em;\n      transform: scaleX(${props.isReverse ? \"-1\" : \"1\"});\n    `};\n`;\n\nexport {StyledRotateIcon};\n","import React from \"react\";\n\nfunction Icon({ className = '' }) {\n    return (\n        <svg\n            className={className}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n        >\n            <path d=\"M12 6C6.3 6 2 8.15 2 11c0 2.45 3.19 4.38 7.71 4.88l-.42.41a1 1 0 000 1.42 1 1 0 001.42 0l2-2a1 1 0 00.21-.33 1 1 0 000-.76 1 1 0 00-.21-.33l-2-2a1 1 0 00-1.42 1.42l.12.11C6 13.34 4 12 4 11c0-1.22 3.12-3 8-3s8 1.78 8 3c0 .83-1.45 2-4.21 2.6a1 1 0 00-.79 1.19 1 1 0 001.19.77c3.65-.8 5.81-2.5 5.81-4.56 0-2.85-4.3-5-10-5z\"></path>\n        </svg>\n    );\n}\n\nexport {Icon};","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledImage = styled.img`\n  user-select: none;\n  touch-action: none;\n  //cursor: inherit;\n  -webkit-user-drag: none;\n`;\n\nconst AnimationImage = ({ src, isVisible, width, height }) => {\n    let display = isVisible ? \"block\" : \"none\";\n    return (\n        <StyledImage\n            alt=\"Rotating object\"\n            src={src}\n            width={width}\n            height={height}\n            style={{ display: display }}\n            loading=\"lazy\"\n        />\n    );\n};\n\nexport {AnimationImage};\n"],"mappings":"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","names":["src_exports","__export","RenderVideo","SpinImages360","__toCommonJS","import_react","import_styled_components","VideoContainer","styled","width","height","Video","Controls","showControls","PlayPauseButton","ProgressBar","showProgressBar","progressBarColor","VolumeControl","showVolumeControl","volumeControlColor","RetryButton","LoadingErrorOverlay","loaded","srcFallback","LoadingOverlay","RenderVideo","React","src","autoplay","loop","muted","showRetryButton","showPlayPauseButton","showLoadingOverlay","RetryButtonComponent","LoadingOverlayComponent","LoadingErrorOverlayComponent","TextLoadingOverlayComponent","PlayPauseButtonComponent","videoRef","isPlaying","setIsPlaying","currentTime","setCurrentTime","duration","setDuration","volume","setVolume","setLoaded","error","setError","togglePlayPause","_a","_b","handleLoadedData","handleError","event","handleTimeUpdate","handleProgressChange","e","newTime","handleVolumeChange","newVolume","handleRetry","import_react","import_styled_components","import_styled_components","import_react","Icon","className","React","StyledRotateIcon","styled","Icon","props","import_react","import_styled_components","StyledImage","styled","AnimationImage","src","isVisible","width","height","React","import_uuidv4","moduloWithoutNegative","value","n","CustomIconSvg","iconUrlEncoded","StyledDiv","styled","props","SpinImages360","imagesBaseUrl","mouseDragSpeed","reverse","autoplaySpeed","autoplay","width","height","showRotationIconOnStartup","imageInitialIndex","shouldNotifyEvents","notifyOnPointerDown","notifyOnPointerUp","notifyOnPointerMoved","elementRef","isScrolling","setIsScrolling","initialMousePosition","setInitialMousePosition","startingImageIndexOnPointerDown","setStartingImageIndexOnPointerDown","currentMousePosition","setCurrentMousePosition","selectedImageIndex","setSelectedImageIndex","showRotationIcon","setShowRotationIcon","useAutoplay","setUseAutoplay","imageSources","setImageSources","imagesCount","timer","incrementImageIndex","change","index","onMouseDown","e","onMouseUp","onMouseMove","imageIndexWithOffset","start","offset","speedFactor","difference","React","StyledRotateIcon","s","AnimationImage"]}